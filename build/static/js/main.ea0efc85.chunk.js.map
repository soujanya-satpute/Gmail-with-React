{"version":3,"sources":["features/userSlice.js","firebase.js","components/header/Header.js","features/mailSlice.js","components/Mail/Mail.js","components/EmailList/Section/Section.js","components/EmailList/EmailRow/EmailRow.js","components/EmailList/EmailList.js","components/sidebar/sidebarOpt/SidebarOpt.js","components/sidebar/Sidebar.js","components/sendMail/SendMail.js","components/Login/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useSelector","dispatch","useDispatch","className","IconButton","src","alt","type","placeholder","Avatar","style","cursor","photoUrl","onClick","signOut","then","mailSlice","selectMail","sendMsgIsOpen","openSendMsg","closeSendMsg","selectOpenMail","mail","selectSendMsgIsOpen","Mail","history","useHistory","selectedMail","push","subject","title","time","description","Section","Icon","color","selected","borderBottom","EmailRow","id","Checkbox","EmailList","useState","emails","setEmails","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","data","InboxIcon","PeopleIcon","LocalOfferIcon","to","message","timeStamp","Date","seconds","toUTCString","SidebarOpt","number","Sidebar","Button","startIcon","StarIcon","AccessTimeIcon","LabelIcon","NearMeIcon","NoteIcon","ExpandMoreIcon","SendMail","useForm","register","handleSubmit","errors","wathch","formState","onSubmit","console","log","add","FieldValue","serverTimestamp","required","variant","Login","signInWithPopup","displayName","email","photoURL","catch","error","alert","App","SendMsgIsOpen","onAuthStateChanged","path","store","configureStore","reducer","mailReducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea0efc85.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState: {\n    user: null,\n  },\n\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload\n    },\n    logout: (state) => {\n      state.user = null\n    },\n  },\n})\n\nexport const { login, logout } = userSlice.actions\nexport const selectUser = (state) => state.user.user\n\nexport default userSlice.reducer\n","import firebase from 'firebase'\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDEnEpPG_CK1X_YNS6-O14TzhChYpG2FNk',\n  authDomain: 'clone-4f684.firebaseapp.com',\n  projectId: 'clone-4f684',\n  storageBucket: 'clone-4f684.appspot.com',\n  messagingSenderId: '1086479436160',\n  appId: '1:1086479436160:web:e6ba2c81a3fd898c4c5965',\n}\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\nconst db = firebaseApp.firestore()\nconst auth = firebase.auth()\nconst provider = new firebase.auth.GoogleAuthProvider()\nexport { db, auth, provider }\n","import React from 'react'\nimport './Header.css'\nimport { IconButton } from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport AppsIcon from '@material-ui/icons/Apps'\nimport NotificationsIcon from '@material-ui/icons/Notifications'\nimport { Avatar } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout, selectUser } from '../../features/userSlice'\nimport { auth } from '../../firebase'\nconst Header = () => {\n  const user = useSelector(selectUser)\n  const dispatch = useDispatch()\n  const signOuting = () => {\n    auth.signOut().then(() => {\n      dispatch(logout())\n    })\n  }\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <IconButton>\n          <MenuIcon />\n        </IconButton>\n        <img\n          src=\"https://cdn.vox-cdn.com/thumbor/8fWz6qpiMYMsZhY4vrc9Vhl5yL8=/0x110:1320x770/fit-in/1200x600/cdn.vox-cdn.com/uploads/chorus_asset/file/21939811/newgmaillogo.jpg\"\n          alt=\"\"\n        />\n      </div>\n      <div className=\"header__middle\">\n        <SearchIcon />\n        <input type=\"text\" placeholder=\"Search your mail here...\" />\n        <ArrowDropDownIcon className=\"header__inputCaret\" />\n      </div>\n      <div className=\"header__right\">\n        <IconButton>\n          <AppsIcon />\n        </IconButton>\n        <IconButton>\n          <NotificationsIcon />\n        </IconButton>\n        <Avatar\n          style={{ cursor: 'pointer' }}\n          src={user?.photoUrl}\n          onClick={signOuting}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const mailSlice = createSlice({\n  name: 'mail',\n  initialState: {\n    selectMail: null,\n    sendMsgIsOpen: false,\n  },\n\n  reducers: {\n    selectMail: (state, action) => {\n      state.selectMail = action.payload\n    },\n    openSendMsg: (state) => {\n      state.sendMsgIsOpen = true\n    },\n    closeSendMsg: (state) => {\n      state.sendMsgIsOpen = false\n    },\n  },\n})\n\nexport const { openSendMsg, closeSendMsg, selectMail } = mailSlice.actions\nexport const selectOpenMail = (state) => state.mail.selectMail\nexport const selectSendMsgIsOpen = (state) => state.mail.sendMsgIsOpen\n\nexport default mailSlice.reducer\n","import { IconButton } from '@material-ui/core'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport MoveToInboxIcon from '@material-ui/icons/MoveToInbox'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EmailIcon from '@material-ui/icons/Email'\nimport WatchLaterIcon from '@material-ui/icons/WatchLater'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport UnfoldMoreIcon from '@material-ui/icons/UnfoldMore'\nimport PrintIcon from '@material-ui/icons/Print'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport './Mail.css'\nimport { useSelector } from 'react-redux'\nimport { selectOpenMail } from '../../features/mailSlice'\nconst Mail = () => {\n  const history = useHistory()\n  const selectedMail = useSelector(selectOpenMail)\n  return (\n    <div className=\"mail\">\n      <div className=\"mail__tools\">\n        <div className=\"mail__toolleft\">\n          <IconButton onClick={() => history.push('/')}>\n            <ArrowBackIcon />\n          </IconButton>\n          <IconButton>\n            <MoveToInboxIcon />\n          </IconButton>\n          <IconButton>\n            <ErrorIcon />\n          </IconButton>\n          <IconButton>\n            <DeleteIcon />\n          </IconButton>\n          <IconButton>\n            <EmailIcon />\n          </IconButton>\n          <IconButton>\n            <WatchLaterIcon />\n          </IconButton>\n          <IconButton>\n            <CheckCircleIcon />\n          </IconButton>\n          <IconButton>\n            <LabelImportantIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n        <div className=\"mail__toolRight\">\n          <IconButton>\n            <UnfoldMoreIcon />\n          </IconButton>\n          <IconButton>\n            <PrintIcon />\n          </IconButton>\n          <IconButton>\n            <ExitToAppIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"mail__body\">\n        <div className=\"mail__bodyHeader\">\n          <h2>{selectedMail?.subject}</h2>\n          <LabelImportantIcon className=\"mail__important\" />\n          <p>{selectedMail?.title}</p>\n          <p className=\"mail__time\">{selectedMail?.time}</p>\n        </div>\n        <div className=\"mail__msg\">\n          <p>{selectedMail?.description}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Mail\n","import React from 'react'\nimport './section.css'\nconst Section = ({ Icon, title, color, selected }) => {\n  return (\n    <div\n      className={`section ${selected && 'section--selected'}`}\n      style={{\n        borderBottom: `3px solid ${color}`,\n        color: `${selected && color}`,\n      }}\n    >\n      <Icon />\n      <h4>{title}</h4>\n    </div>\n  )\n}\n\nexport default Section\n","import { Checkbox, IconButton } from '@material-ui/core'\nimport React from 'react'\nimport './EmailRow.css'\nimport StarBorderIcon from '@material-ui/icons/StarBorder'\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { selectMail } from '../../../features/mailSlice'\n\nconst EmailRow = ({ id, title, subject, description, time }) => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const openMail = () => {\n    dispatch(selectMail({ id, title, subject, description, time }))\n    history.push('/mail')\n  }\n  return (\n    <div className=\"emailRow\" onClick={openMail}>\n      <div className=\"emailRow__option\">\n        <Checkbox />\n        <IconButton>\n          <StarBorderIcon />\n        </IconButton>\n        <IconButton>\n          <LabelImportantIcon />\n        </IconButton>\n      </div>\n      <h4 className=\"emailRow__title\">{title} </h4>\n      <div className=\"emailRow__msg\">\n        <h4>\n          {subject} -\n          <span className=\"emailRow__description\">{description}</span>\n        </h4>\n      </div>\n      <div className=\"emailRow__time\">{time}</div>\n    </div>\n  )\n}\n\nexport default EmailRow\n","import React, { useEffect, useState } from 'react'\nimport './EmailList.css'\nimport { Checkbox, IconButton } from '@material-ui/core'\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\nimport RedoIcon from '@material-ui/icons/Redo'\nimport MoreVertIcon from '@material-ui/icons/MoreVert'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\nimport KeyboardHideIcon from '@material-ui/icons/KeyboardHide'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport Section from './Section/Section'\nimport InboxIcon from '@material-ui/icons/Inbox'\nimport PeopleIcon from '@material-ui/icons/People'\nimport LocalOfferIcon from '@material-ui/icons/LocalOffer'\nimport EmailRow from './EmailRow/EmailRow'\nimport { db } from '../../firebase'\n\nconst EmailList = () => {\n  const [emails, setEmails] = useState([])\n\n  useEffect(() => {\n    db.collection('emails')\n      .orderBy('timeStamp', 'desc')\n      .onSnapshot((snapshot) =>\n        setEmails(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            data: doc.data(),\n          }))\n        )\n      )\n  }, [])\n\n  return (\n    <div className=\"emailList\">\n      <div className=\"emailList__settings\">\n        <div className=\"emailList__settingsLeft\">\n          <Checkbox />\n          <IconButton>\n            <ArrowDropDownIcon />\n          </IconButton>\n          <IconButton>\n            <RedoIcon />\n          </IconButton>\n          <IconButton>\n            <MoreVertIcon />\n          </IconButton>\n        </div>\n        <div className=\"emailList__settingsRight\">\n          <IconButton>\n            <ChevronLeftIcon />\n          </IconButton>\n          <IconButton>\n            <ChevronRightIcon />\n          </IconButton>\n          <IconButton>\n            <KeyboardHideIcon />\n          </IconButton>\n          <IconButton>\n            <SettingsIcon />\n          </IconButton>\n        </div>\n      </div>\n      <div className=\"emailList__sections\">\n        <Section Icon={InboxIcon} title=\"Primary\" color=\"red\" selected />\n        <Section Icon={PeopleIcon} title=\"Social\" color=\"#1A73A8\" />\n        <Section Icon={LocalOfferIcon} title=\"Promotions\" color=\"green\" />\n      </div>\n      <div className=\"emailList__list\">\n        {emails.map(({ id, data: { to, subject, message, timeStamp } }) => {\n          return (\n            <EmailRow\n              key={id}\n              title={to}\n              subject={subject}\n              description={message}\n              time={new Date(timeStamp?.seconds * 1000).toUTCString()}\n            />\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nexport default EmailList\n","import React from 'react'\nimport './SidebarOpt.css'\nconst SidebarOpt = ({ Icon, title, number, selected }) => {\n  return (\n    <div className={`sidebarOpt ${selected && 'sidebarOpt--active'}`}>\n      <Icon />\n      <h3>{title}</h3>\n      <p>{number}</p>\n    </div>\n  )\n}\n\nexport default SidebarOpt\n","import { Button, IconButton } from '@material-ui/core'\nimport React from 'react'\nimport './sidebar.css'\nimport AddIcon from '@material-ui/icons/Add'\nimport SidebarOpt from './sidebarOpt/SidebarOpt'\nimport InboxIcon from '@material-ui/icons/Inbox'\nimport StarIcon from '@material-ui/icons/Star'\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\nimport LabelIcon from '@material-ui/icons/Label'\nimport NearMeIcon from '@material-ui/icons/NearMe'\nimport NoteIcon from '@material-ui/icons/Note'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport PersonIcon from '@material-ui/icons/Person'\nimport DuoIcon from '@material-ui/icons/Duo'\nimport PhoneIcon from '@material-ui/icons/Phone'\nimport { useDispatch } from 'react-redux'\nimport { openSendMsg } from '../../features/mailSlice'\nconst Sidebar = () => {\n  const dispatch = useDispatch()\n  return (\n    <div className=\"sidebar\">\n      <Button\n        className=\"sidebar__compose\"\n        startIcon={<AddIcon font-size=\"large\" />}\n        onClick={() => dispatch(openSendMsg())}\n      >\n        {' '}\n        Compose{' '}\n      </Button>\n\n      <SidebarOpt Icon={InboxIcon} title=\"Inbox\" number={1} selected={true} />\n      <SidebarOpt Icon={StarIcon} title=\"Starred\" number={14} />\n      <SidebarOpt Icon={AccessTimeIcon} title=\"Snoozed\" number={5} />\n      <SidebarOpt Icon={LabelIcon} title=\"Important\" number={11} />\n      <SidebarOpt Icon={NearMeIcon} title=\"Sent\" number={23} />\n      <SidebarOpt Icon={NoteIcon} title=\"Drafts\" number={2} />\n      <SidebarOpt Icon={ExpandMoreIcon} title=\"More\" number={1} />\n\n      <div className=\"sidebar__footer\">\n        <div className=\"sidebar__footerIcon\">\n          <IconButton>\n            <PersonIcon />\n          </IconButton>\n          <IconButton>\n            <DuoIcon />\n          </IconButton>\n          <IconButton>\n            <PhoneIcon />\n          </IconButton>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import React from 'react'\nimport './SendMail.css'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { Button } from '@material-ui/core'\nimport { useForm } from 'react-hook-form'\n\nimport { useDispatch } from 'react-redux'\nimport { closeSendMsg } from '../../features/mailSlice'\nimport { db } from '../../firebase'\nimport firebase from 'firebase'\nconst SendMail = () => {\n  const dispatch = useDispatch()\n  const {\n    register,\n    handleSubmit,\n    wathch,\n    formState: { errors },\n  } = useForm()\n  const onSubmit = (data) => {\n    console.log(data)\n    db.collection('emails').add({\n      to: data.to,\n      subject: data.subject,\n      message: data.message,\n      timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n    })\n    dispatch(closeSendMsg())\n  }\n  return (\n    <div className=\"sendMail\">\n      <div className=\"senMail__header\">\n        <h3>New Message</h3>\n        <CloseIcon\n          className=\"sendMail__close\"\n          onClick={() => dispatch(closeSendMsg())}\n        />\n      </div>\n      <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\n        <input\n          name=\"to\"\n          placeholder=\"To\"\n          type=\"email\"\n          {...register('to', { required: true })}\n        />\n        {errors.to && <p className=\"sendMail__error\"> To is Required </p>}\n        <input\n          name=\"subject\"\n          placeholder=\"Subject\"\n          type=\"text\"\n          {...register('subject', { required: true })}\n        />\n        {errors.subject && (\n          <p className=\"sendMail__error\"> Subject is Required </p>\n        )}\n        <input\n          name=\"message\"\n          placeholder=\"Message\"\n          type=\"text\"\n          className=\"sendMail__msg\"\n          {...register('message', { required: true })}\n        />\n        {errors.message && (\n          <p className=\"sendMail__error\"> Message is Required </p>\n        )}\n        <div className=\"sendMail__options\">\n          <Button\n            className=\"sendMail__send\"\n            variant=\"contained\"\n            color=\"primary\"\n            type=\"submit\"\n          >\n            Send\n          </Button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default SendMail\n","import { Button } from '@material-ui/core'\nimport React from 'react'\nimport { auth, provider } from '../../firebase'\nimport { login } from '../../features/userSlice'\nimport './Login.css'\nimport { useDispatch } from 'react-redux'\nconst Login = () => {\n  const dispatch = useDispatch()\n  const signIn = () => {\n    auth\n      .signInWithPopup(provider)\n      .then(({ user }) => {\n        dispatch(\n          login({\n            displayName: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          })\n        )\n      })\n      .catch((error) => alert(error.message))\n  }\n  return (\n    <div className=\"login\">\n      <div className=\"login__container\">\n        <img\n          src=\"https://cdn.vox-cdn.com/thumbor/8fWz6qpiMYMsZhY4vrc9Vhl5yL8=/0x110:1320x770/fit-in/1200x600/cdn.vox-cdn.com/uploads/chorus_asset/file/21939811/newgmaillogo.jpg\"\n          alt=\"\"\n        />\n        <Button onClick={signIn} variant=\"contained\" color=\"primary\">\n          Login\n        </Button>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React, { useEffect } from 'react'\n\nimport './App.css'\nimport Header from './components/header/Header'\nimport Mail from './components/Mail/Mail'\nimport EmailList from './components/EmailList/EmailList'\nimport Sidebar from './components/sidebar/Sidebar'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport SendMail from './components/sendMail/SendMail'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { selectSendMsgIsOpen } from './features/mailSlice'\nimport { login, logout, selectUser } from './features/userSlice'\nimport Login from './components/Login/Login'\nimport { auth } from './firebase'\n\nfunction App() {\n  const SendMsgIsOpen = useSelector(selectSendMsgIsOpen)\n  const user = useSelector(selectUser)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        dispatch(\n          login({\n            displayName: user.displayName,\n            email: user.email,\n            photoUrl: user.photoURL,\n          })\n        )\n        console.log(user.photoURL)\n      }\n    })\n  }, [])\n  console.log(user)\n  return (\n    <Router>\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app\">\n          <Header />\n          <div className=\"app__body\">\n            <Sidebar />\n            <Switch>\n              <Route path=\"/mail\">\n                <Mail />\n              </Route>\n              <Route path=\"/\">\n                <EmailList />\n              </Route>\n            </Switch>\n          </div>\n          {SendMsgIsOpen && <SendMail />}\n        </div>\n      )}\n    </Router>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport mailReducer from '../features/mailSlice'\nimport userReducer from '../features/userSlice'\n\nexport const store = configureStore({\n  reducer: {\n    mail: mailReducer,\n    user: userReducer,\n  },\n})\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}